name: Build Android & Windows
on:
  workflow_call:
    inputs:
      upload-artifact:
        type: boolean
        default: true
      tag-name:
        type: string
        default: "draft"
      channel:
        type: string
        default: "dev"

env:
  IS_GITHUB_ACTIONS: 1
  CHANNEL: "${{ inputs.channel }}"
  FLUTTER_VERSION: '3.24.0'
  NDK_VERSION: r26d
  UPLOAD_ARTIFACT: "${{ inputs.upload-artifact }}"
  TAG_NAME: "${{ inputs.tag-name }}"
  TARGET_NAME_apk: "Hiddify-Android"
  TARGET_NAME_aab: "Hiddify-Android"
  TARGET_NAME_windows: "Hiddify-Windows-x64"

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      draftBuildCode: ${{ steps.draftBuildCode.outputs.datetime }}
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true
      - name: Prepare
        run: make linux-prepare
      - name: Test
        run: flutter test
      - name: make draftBuildCode
        id: draftBuildCode
        run: echo "::set-output name=datetime::$(date +'%d.%H.%M')"

  build:
    needs: test
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android-apk
            os: ubuntu-latest
            targets: apk
          - platform: android-aab
            os: ubuntu-latest
            targets: aab
          - platform: windows
            os: windows-2019
            targets: exe,msix
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      # Flutter setup
      - name: Setup Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true

      # Android setup
      - name: Setup Java
        if: startsWith(matrix.platform,'android')
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17
      - name: Setup NDK
        if: startsWith(matrix.platform,'android')
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: ${{ env.NDK_VERSION }}
          add-to-path: true
          link-to-sdk: true
      - name: Setup Gradle
        if: startsWith(matrix.platform,'android')
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 7.5

      - name: Install Dependencies
        run: make ${{ matrix.platform }}-install-dependencies

      - name: Android Signing
        if: ${{ inputs.upload-artifact && startsWith(matrix.platform,'android') }}
        run: |
          echo "${{ secrets.ANDROID_SIGNING_KEY }}" | base64 --decode > android/key.jks
          echo "storeFile=$(pwd)/android/key.jks" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}" >> android/key.properties

      - name: Windows Signing
        if: ${{ inputs.upload-artifact && startsWith(matrix.platform,'windows') }}
        run: |
          [IO.File]::WriteAllBytes("windows\sign.pfx", [Convert]::FromBase64String("${{ secrets.WINDOWS_SIGNING_KEY }}"))
          (Get-Content "windows\packaging\msix\make_config.yaml") -replace '^certificate_password:.*$', 'certificate_password: ${{ secrets.WINDOWS_SIGNING_PASSWORD }}' | Set-Content "windows\packaging\msix\make_config.yaml"

      - name: Prepare Platform
        run: make ${{ matrix.platform }}-prepare

      - name: Build Platform
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: make ${{ matrix.platform }}-release

      - name: Code Sign Windows
        if: ${{ inputs.upload-artifact && startsWith(matrix.platform,'windows') }}
        uses: hiddify/signtool-code-sign-sha256@main
        with:
          certificate: '${{ secrets.WINDOWS_SIGNING_KEY }}'
          cert-password: '${{ secrets.WINDOWS_SIGNING_PASSWORD }}'
          cert-sha1: '${{ secrets.WINDOWS_SIGNING_SHA1 }}'
          folder: 'dist'
          timestamp-server: 'http://timestamp.digicert.com'
          recursive: true
          description: 'Hiddify'

      - name: Copy Artifacts
        run: |
          if [ "${{ matrix.platform }}" = "windows" ]; then ./scripts/package_windows.ps1; fi
          if [ "${{ matrix.platform }}" = "android-apk" ]; then mkdir -p out; cp ./build/app/outputs/flutter-apk/*.apk out/; fi
          if [ "${{ matrix.platform }}" = "android-aab" ]; then mkdir -p out; cp ./build/app/outputs/bundle/release/*.aab out/; fi

      - name: Upload Debug Symbols
        if: ${{ inputs.upload-artifact && inputs.tag-name != 'draft' }}
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_DIST: ${{ matrix.platform == 'android-aab' && 'google-play' || 'general' }}
        run: |
          dart pub global activate sentry_dart_plugin
          dart run sentry_dart_plugin
